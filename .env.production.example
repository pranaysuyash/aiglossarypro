# AI Glossary Pro - Production Environment Configuration
# Copy this file to .env.production and fill in your actual values

# ===================================
# Application Configuration
# ===================================
NODE_ENV=production
VITE_APP_TITLE="AI/ML Glossary Pro"
VITE_APP_URL=https://aiglossarypro.com
VITE_API_BASE_URL=https://aiglossarypro.com

# ===================================
# Google Analytics 4 (GA4)
# ===================================
# Get your GA4 Measurement ID from Google Analytics:
# 1. Go to https://analytics.google.com
# 2. Select your property or create a new one
# 3. Go to Admin (gear icon) > Data Streams
# 4. Click on your web stream
# 5. Copy the Measurement ID (starts with G-)
VITE_GA_MEASUREMENT_ID=G-XXXXXXXXXX

# GA4 API Secret (for server-side tracking):
# 1. In the same Data Stream page
# 2. Under "Additional Settings" > "Measurement Protocol API secrets"
# 3. Create a new secret
# 4. Copy the secret value
GA_API_SECRET=your_ga4_api_secret

# ===================================
# Email Configuration (Resend)
# ===================================
# Resend is already integrated for production emails
# Get your API key from https://resend.com/api-keys
RESEND_API_KEY=re_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
EMAIL_FROM=noreply@aiglossarypro.com
EMAIL_FROM_NAME=AI Glossary Pro
EMAIL_ENABLED=true

# Optional: SMTP Fallback (if Resend is unavailable)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_SECURE=false
# SMTP_USER=your-email@gmail.com
# SMTP_PASS=your-app-specific-password

# ===================================
# Gumroad Configuration
# ===================================
# Get these from your Gumroad account:
# 1. Go to https://gumroad.com/settings/advanced
# 2. Create an Access Token
GUMROAD_ACCESS_TOKEN=your_gumroad_access_token

# Webhook Secret:
# 1. Go to https://gumroad.com/settings/advanced
# 2. Under "Webhooks", add your webhook URL: https://aiglossarypro.com/api/gumroad/webhooks/sale
# 3. Generate and copy the webhook secret
GUMROAD_WEBHOOK_SECRET=your_webhook_secret

# Your Gumroad product URL
VITE_GUMROAD_PRODUCT_URL=https://gumroad.com/l/your-product-id

# ===================================
# Firebase Authentication
# ===================================
# Frontend Firebase config (from Firebase Console > Project Settings > General)
VITE_FIREBASE_API_KEY=your_firebase_api_key
VITE_FIREBASE_AUTH_DOMAIN=your-project.firebaseapp.com
VITE_FIREBASE_PROJECT_ID=your-project-id
VITE_FIREBASE_STORAGE_BUCKET=your-project.appspot.com
VITE_FIREBASE_MESSAGING_SENDER_ID=123456789012
VITE_FIREBASE_APP_ID=1:123456789012:web:xxxxxxxxxxxxxxxxx

# Backend Firebase Admin SDK (from Firebase Console > Project Settings > Service Accounts)
FIREBASE_PROJECT_ID=your-project-id
FIREBASE_CLIENT_EMAIL=firebase-adminsdk-xxxxx@your-project.iam.gserviceaccount.com
# Generate new private key and encode it to base64:
# cat path/to/serviceAccountKey.json | base64
FIREBASE_PRIVATE_KEY_BASE64=your_base64_encoded_private_key

# ===================================
# Database Configuration
# ===================================
# PostgreSQL connection string
DATABASE_URL=postgresql://user:password@host:port/database?sslmode=require

# ===================================
# Redis Configuration (for caching)
# ===================================
# Redis is used for caching, session storage, and job queues
# Option 1: Redis URL (recommended for production)
REDIS_URL=redis://user:password@host:port/0

# Option 2: Individual Redis settings
REDIS_ENABLED=true
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=your-secure-redis-password
REDIS_DB=0
REDIS_TLS=false

# Redis Cache Configuration
ENABLE_REDIS_CACHE=true
REDIS_CACHE_TTL=3600
REDIS_CACHE_PREFIX=aiglossary:

# Redis Job Queue Configuration (uses separate database)
REDIS_QUEUE_DB=1
REDIS_QUEUE_PREFIX=queue:

# Redis Performance Settings
REDIS_CONNECT_TIMEOUT=10000
REDIS_COMMAND_TIMEOUT=5000
REDIS_RETRY_DELAY=1000
REDIS_MAX_RETRIES=5

# ===================================
# Security & Authentication
# ===================================
# Generate secure keys: openssl rand -base64 32
JWT_SECRET=your_secure_jwt_secret_min_32_chars
SESSION_SECRET=your_secure_session_secret_min_32_chars
COOKIE_SECRET=your_secure_cookie_secret_min_32_chars

# OAuth Providers (optional)
GOOGLE_CLIENT_ID=your_google_oauth_client_id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your_google_oauth_client_secret
GITHUB_CLIENT_ID=your_github_oauth_client_id
GITHUB_CLIENT_SECRET=your_github_oauth_client_secret

# ===================================
# CDN Configuration
# ===================================
# CloudFlare CDN
# CDN_PROVIDER=cloudflare
# CLOUDFLARE_ZONE_ID=your_zone_id
# CLOUDFLARE_API_TOKEN=your_api_token

# AWS CloudFront
# CDN_PROVIDER=cloudfront
# AWS_CLOUDFRONT_DISTRIBUTION_ID=your_distribution_id
# AWS_ACCESS_KEY_ID=your_access_key
# AWS_SECRET_ACCESS_KEY=your_secret_key
# AWS_REGION=us-east-1

# ===================================
# SSL/TLS Configuration (for HTTP/2)
# ===================================
# Path to SSL certificate files (optional - recommended to handle at reverse proxy level)
# SSL_KEY_PATH=/path/to/privkey.pem
# SSL_CERT_PATH=/path/to/fullchain.pem

# ===================================
# Error Monitoring (Sentry)
# ===================================
# Get your DSN from https://sentry.io
SENTRY_DSN=https://xxxxxxxxxxxxxxxxxxxxxxxxxxxx@o123456.ingest.sentry.io/1234567
SENTRY_ENVIRONMENT=production
VITE_SENTRY_DSN=https://xxxxxxxxxxxxxxxxxxxxxxxxxxxx@o123456.ingest.sentry.io/1234567

# ===================================
# Analytics Platforms (Optional)
# ===================================
# PostHog
VITE_POSTHOG_KEY=phc_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
VITE_POSTHOG_HOST=https://app.posthog.com
# Disable analytics tracking in local development only (set to true to disable)
# Note: This only affects development environment when NODE_ENV=development
VITE_DISABLE_ANALYTICS=false

# Mixpanel
# VITE_MIXPANEL_TOKEN=your_mixpanel_token

# ===================================
# Performance & Caching
# ===================================
# Enable various caching mechanisms
ENABLE_REDIS_CACHE=true
ENABLE_MEMORY_CACHE=true
CACHE_TTL_SECONDS=3600

# Enable compression
ENABLE_COMPRESSION=true
COMPRESSION_LEVEL=6

# ===================================
# Rate Limiting
# ===================================
RATE_LIMIT_WINDOW_MS=900000  # 15 minutes
RATE_LIMIT_MAX_REQUESTS=100  # per window
RATE_LIMIT_SKIP_SUCCESSFUL_REQUESTS=false
RATE_LIMIT_SKIP_FAILED_REQUESTS=false

# ===================================
# Feature Flags
# ===================================
VITE_ENABLE_ANALYTICS=true
VITE_ENABLE_PERFORMANCE_MONITORING=true
VITE_ENABLE_DEBUG_MODE=false
VITE_ENABLE_MOCK_API=false

# ===================================
# Server Configuration
# ===================================
PORT=3001
SERVER_HOST=0.0.0.0

# ===================================
# Logging
# ===================================
LOG_LEVEL=info
LOG_FORMAT=json
ENABLE_REQUEST_LOGGING=true
ENABLE_ERROR_LOGGING=true

# ===================================
# Job Queue Configuration
# ===================================
ENABLE_JOB_QUEUE=true
JOB_QUEUE_CONCURRENCY=5