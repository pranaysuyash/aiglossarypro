name: Test Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  coverage:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests with coverage
      run: npm run test:coverage
      env:
        CI: true
      continue-on-error: true
      
    - name: Generate coverage report
      run: |
        chmod +x ./scripts/generate-coverage-report.sh
        ./scripts/generate-coverage-report.sh
      env:
        CI: true
        
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        
    - name: Upload coverage to Coveralls
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ./coverage/lcov.info
      continue-on-error: true
      
    - name: Comment PR with coverage
      if: github.event_name == 'pull_request'
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        recreate: true
        message: |
          ## 📊 Coverage Report
          
          Coverage analysis has been completed for this PR.
          
          **Coverage Summary:**
          - 📈 View detailed report in the Actions artifacts
          - 🎯 Target: 80% for critical modules, 70% global
          - 🏷️ Badge: ![Coverage](https://img.shields.io/badge/coverage-calculating-yellow)
          
          **Critical Modules Status:**
          - 🔐 Authentication: Requires 90% coverage
          - 💰 Payment Processing: Requires 90% coverage  
          - 🤖 AI Services: Requires 80% coverage
          - 🛡️ Security Middleware: Requires 85% coverage
          
          For detailed coverage analysis, check the Actions logs and artifacts.
          
    - name: Archive coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ matrix.node-version }}
        path: |
          coverage/
          !coverage/tmp/
        retention-days: 30
        
    - name: Check coverage thresholds
      run: |
        node -e "
          const fs = require('fs');
          try {
            const summary = JSON.parse(fs.readFileSync('coverage/coverage-summary.json', 'utf8'));
            const total = summary.total;
            
            console.log('📊 Coverage Results:');
            console.log(\`Lines: \${total.lines.pct}%\`);
            console.log(\`Statements: \${total.statements.pct}%\`);
            console.log(\`Functions: \${total.functions.pct}%\`);
            console.log(\`Branches: \${total.branches.pct}%\`);
            
            // Global thresholds
            const globalThreshold = 70;
            const criticalThreshold = 80;
            
            if (total.lines.pct < globalThreshold) {
              console.log(\`❌ Global coverage (\${total.lines.pct}%) is below minimum threshold (\${globalThreshold}%)\`);
              process.exit(1);
            } else if (total.lines.pct < criticalThreshold) {
              console.log(\`⚠️  Global coverage (\${total.lines.pct}%) is below critical threshold (\${criticalThreshold}%)\`);
              console.log('Consider adding more tests for critical modules');
            } else {
              console.log(\`✅ Global coverage (\${total.lines.pct}%) meets critical threshold\`);
            }
            
            // Set output for other steps
            console.log(\`::set-output name=coverage::\${total.lines.pct}\`);
            
          } catch (error) {
            console.log('❌ Coverage summary not available');
            process.exit(1);
          }
        "
        
  coverage-report:
    runs-on: ubuntu-latest
    needs: coverage
    if: always()
    
    steps:
    - name: Download coverage reports
      uses: actions/download-artifact@v4
      with:
        name: coverage-report-20.x
        path: ./coverage
        
    - name: Generate coverage summary
      run: |
        echo "## 📊 Coverage Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "coverage/coverage-summary.json" ]; then
          node -e "
            const fs = require('fs');
            const summary = JSON.parse(fs.readFileSync('coverage/coverage-summary.json', 'utf8'));
            const total = summary.total;
            
            console.log('| Metric | Coverage | Status |');
            console.log('|--------|----------|--------|');
            console.log(\`| Lines | \${total.lines.pct}% | \${total.lines.pct >= 80 ? '✅' : total.lines.pct >= 70 ? '⚠️' : '❌'} |');
            console.log(\`| Statements | \${total.statements.pct}% | \${total.statements.pct >= 80 ? '✅' : total.statements.pct >= 70 ? '⚠️' : '❌'} |');
            console.log(\`| Functions | \${total.functions.pct}% | \${total.functions.pct >= 80 ? '✅' : total.functions.pct >= 70 ? '⚠️' : '❌'} |');
            console.log(\`| Branches | \${total.branches.pct}% | \${total.branches.pct >= 80 ? '✅' : total.branches.pct >= 70 ? '⚠️' : '❌'} |');
            
            console.log('');
            console.log('### 🎯 Threshold Status');
            console.log('- **Global Minimum**: 70% ✅');
            console.log('- **Critical Modules**: 80% ⚠️');
            console.log('- **Security/Payment**: 90% ❌');
            
          " >> $GITHUB_STEP_SUMMARY
        else
          echo "Coverage summary not available" >> $GITHUB_STEP_SUMMARY
        fi