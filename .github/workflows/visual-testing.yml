name: Visual Testing Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  visual-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright
      run: npx playwright install --with-deps

    - name: Build application
      run: npm run build

    - name: Run visual tests
      run: npx playwright test --config=playwright.visual.config.ts
      env:
        CI: true

    - name: Upload visual test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: visual-test-results
        path: |
          playwright-report/visual/
          tests/visual/**/*-snapshots/

    - name: Run Chromatic visual regression
      if: github.event_name == 'push'
      run: npm run chromatic:ci
      env:
        CHROMATIC_PROJECT_TOKEN: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}

  storybook-visual-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build Storybook
      run: npm run build-storybook

    - name: Run Chromatic
      uses: chromaui/action@v1
      with:
        projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
        buildScriptName: build-storybook
        exitZeroOnChanges: true
        onlyChanged: true

  enhanced-visual-audit:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Start development server
      run: npm run dev &

    - name: Wait for server
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:5173; do sleep 2; done'

    - name: Run enhanced visual audit
      run: npm run audit:visual:enhanced
      env:
        HEADLESS: true
        CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}

    - name: Upload audit results
      uses: actions/upload-artifact@v4
      with:
        name: visual-audit-report
        path: visual-audits/