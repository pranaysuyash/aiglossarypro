# AI/ML Glossary Pro - Production Dockerfile (TypeScript Compilation)
## ---------- build stage ----------
FROM --platform=linux/amd64 node:20-alpine AS build
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache python3 make g++

# Copy package files
COPY package*.json ./
RUN npm ci

# Copy source code
COPY . .

# Build frontend + backend
RUN npm run build

## ---------- runtime stage ----------
FROM --platform=linux/amd64 node:20-alpine
WORKDIR /app

# Install runtime dependencies
RUN apk add --no-cache curl

# Create user
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 appuser

# Set environment
ENV NODE_ENV=production
ENV PORT=8080

# Copy production dependencies
COPY package*.json ./
RUN npm ci --omit=dev && npm cache clean --force

# Copy built application
COPY --from=build /app/dist ./dist
COPY --from=build /app/dist/public ./public
COPY --from=build /app/migrations ./migrations
COPY --from=build /app/shared ./shared

# Create necessary directories
RUN mkdir -p logs uploads && \
    chown -R appuser:nodejs /app

# Switch to non-root user
USER appuser

EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:8080/api/health || exit 1

# Start server
CMD ["npm", "run", "start:prod"]