version: 1.0
runtime: nodejs18

build:
  commands:
    pre-build:
      - npm install -g pnpm
      - corepack enable
      - echo "Node version:" && node --version
      - echo "pnpm version:" && pnpm --version
    build:
      - pnpm install --frozen-lockfile
      
      # Build workspace packages first
      - echo "=== Building workspace packages ==="
      - pnpm --filter @aiglossarypro/shared run build || echo "shared build completed"
      - pnpm --filter @aiglossarypro/database run build || echo "database build completed"
      - pnpm --filter @aiglossarypro/auth run build || echo "auth build completed"
      - pnpm --filter @aiglossarypro/config run build || echo "config build completed"
      
      # Build API with proper context
      - echo "=== Building API ==="
      - cd apps/api && SKIP_TYPE_CHECK=true NODE_ENV=production pnpm run build
      
      # Verify build output
      - echo "=== Verifying build output ==="
      - ls -la apps/api/dist/
      - ls -la apps/api/dist/*.js | head -10
      
    post-build:
      # Clean up dev dependencies to reduce deployment size
      - echo "=== Optimizing for production ==="
      - rm -rf node_modules/.cache
      - find . -name "*.test.js" -delete || true
      - find . -name "*.spec.js" -delete || true

run:
  command: node apps/api/dist/index.js
  network:
    port: 8080
    env: PORT
  env:
    - name: NODE_ENV
      value: production
    - name: PORT
      value: "8080"
    - name: DATABASE_URL
      value: "postgresql://neondb_owner:npg_9dlJKInqoT1w@ep-wandering-morning-a5u0szvw.us-east-2.aws.neon.tech/neondb?sslmode=require"
    - name: SESSION_SECRET
      value: "JCmY1YTJ2lXuEKhHgKZURZfub9S7WNQgy5Om2NFDdWu3dg0CtqB7wQGyXHzQG2sqDVAkGE9H9ual6uc1cVn8LA=="
    - name: JWT_SECRET
      value: "JCmY1YTJ2lXuEKhHgKZURZfub9S7WNQgy5Om2NFDdWu3dg0CtqB7wQGyXHzQG2sqDVAkGE9H9ual6uc1cVn8LA=="
    # Enable simple auth as fallback
    - name: SIMPLE_AUTH_ENABLED
      value: "true"