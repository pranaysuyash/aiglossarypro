version: 1.0
runtime: nodejs18

build:
  commands:
    pre-build:
      - npm install -g pnpm
      - corepack enable
      - echo "Node version:" && node --version
      - echo "pnpm version:" && pnpm --version
    build:
      - pnpm install --frozen-lockfile
      # Debug: Check files before package swap
      - echo "=== BEFORE PACKAGE SWAP ==="
      - ls -la package*.json
      - cat package.json | grep -E "(type|main|scripts)" || echo "No match"
      
      # CRITICAL: Switch to CommonJS configuration
      - cp package.deploy.json package.json
      - echo "=== AFTER PACKAGE SWAP ==="
      - ls -la package*.json
      - cat package.json | grep -E "(type|main|scripts)" || echo "No match"
      
      # Build workspace packages first
      - pnpm --filter @aiglossarypro/shared run build || echo "shared build completed"
      - pnpm --filter @aiglossarypro/database run build || echo "database build completed"  
      - pnpm --filter @aiglossarypro/auth run build || echo "auth build completed"
      - pnpm --filter @aiglossarypro/config run build || echo "config build completed"
      
      # Debug: Check TypeScript config
      - echo "=== TYPESCRIPT CONFIG CHECK ==="
      - ls -la tsconfig*.json
      - cat tsconfig.deploy.json || echo "tsconfig.deploy.json not found"
      
      # CRITICAL: Build API to CommonJS (with debugging)
      - echo "=== STARTING API BUILD ==="
      - pnpm run build || (echo "BUILD FAILED" && exit 1)
      - echo "=== API BUILD COMPLETED ==="
      
      # Verify build output
      - echo "=== VERIFYING BUILD OUTPUT ==="
      - ls -la dist/ || echo "No dist directory found"
      - ls -la dist/*.js || echo "No JS files in dist"
      - head -20 dist/index.js || echo "Cannot read dist/index.js"
      
    post-build:
      - echo "Production dependencies ready"

run:
  command: node dist/index.js
  network:
    port: 8080
    env: PORT
  env:
    - name: NODE_ENV
      value: production
    - name: PORT
      value: "8080"
    # Critical environment variables to prevent crash
    - name: DATABASE_URL
      value: "postgresql://localhost:5432/aiglossary"
    - name: SESSION_SECRET
      value: "temporary-secret-replace-in-production"
    - name: JWT_SECRET
      value: "temporary-jwt-secret-replace-in-production"
    # Enable simple auth as fallback
    - name: SIMPLE_AUTH_ENABLED
      value: "true"
    # Firebase auth disabled - missing private key
    # - name: FIREBASE_PROJECT_ID
    #   value: "aiglossary-a7199"
    # - name: FIREBASE_CLIENT_EMAIL
    #   value: "firebase-adminsdk-syzds@aiglossary-a7199.iam.gserviceaccount.com"