{
  "name": "rest-express",
  "version": "1.0.0",
  "type": "module",
  "license": "MIT",
  "scripts": {
    "dev": "node scripts/dev-start.js",
    "start:dev": "node scripts/dev-start.js",
    "dev:smart": "node scripts/dev-start.js",
    "dev:basic": "concurrently \"npm:dev:server\" \"npm:dev:client\"",
    "dev:server": "NODE_ENV=development SEPARATE_FRONTEND_SERVER=true NODE_OPTIONS='--max-old-space-size=4096' tsx watch server/index.ts",
    "dev:client": "vite",
    "dev:perf": "concurrently \"npm:dev\" \"sleep 10 && npx react-scan@latest http://localhost:5173\"",
    "dev:scan": "concurrently \"npm:dev\" \"sleep 10 && npx react-scan@latest http://localhost:5173 --config config/react-scan.config.js\"",
    "dev:scan:report": "concurrently \"npm:dev\" \"sleep 10 && npx react-scan@latest http://localhost:5173 --config config/react-scan.config.js --report\"",
    "dev:scan:monitor": "concurrently \"npm:dev\" \"sleep 10 && npx react-scan@latest http://localhost:5173 --config config/react-scan.config.js --monitor\"",
    "dev:setup": "tsx scripts/dev-tools-setup.ts",
    "fix:typescript": "tsx scripts/typescript-error-fixer.ts",
    "fix:typescript:any": "tsx scripts/fix-typescript-any-types.ts",
    "fix:typescript:any:apply": "tsx scripts/fix-typescript-any-types.ts --fix",
    "fix:console-logs": "tsx scripts/replace-console-logs.ts",
    "fix:console-logs:dry": "tsx scripts/replace-console-logs.ts --dry-run",
    "perf:analyze": "tsx scripts/performance-analyzer.ts",
    "perf:report": "tsx scripts/generate-performance-report.ts",
    "perf:dashboard": "tsx scripts/performance-dashboard.ts",
    "perf:ci": "tsx scripts/ci-performance-check.ts",
    "lighthouse": "node scripts/lighthouse-test.js",
    "lighthouse:ci": "lhci autorun --config=lighthouse.config.js",
    "setup:production-check": "tsx scripts/production-setup-checker.ts",
    "check:production": "tsx scripts/production-setup-checker.ts",
    "validate:production": "tsx scripts/validate-production-config.ts",
    "config:validate": "tsx scripts/production-configuration-validator.ts",
    "bundle:analyze": "tsx scripts/bundle-analysis.ts",
    "bundle:size": "npm run build && tsx scripts/bundle-analysis.ts",
    "build:analyze": "NODE_ENV=analyze npm run build",
    "test:email": "tsx scripts/test-email.js",
    "test:analytics": "tsx scripts/test-analytics.ts",
    "test:sentry": "tsx scripts/test-sentry.ts",
    "test:webhook": "node scripts/test-gumroad-webhook.js",
    "verify:analytics": "node scripts/verify-analytics.js",
    "verify:production": "npm run validate:production && npm run verify:analytics",
    "setup:ab-tests": "tsx scripts/setup-ab-test-experiments.ts",
    "build": "vite build && esbuild server/index.ts --platform=node --bundle --format=cjs --outdir=dist --external:pg --external:redis --external:ioredis --external:bullmq --external:firebase-admin --external:@google-cloud/storage --external:sharp --external:bcrypt --external:argon2 --external:swagger-ui-express --external:swagger-jsdoc --external:dotenv --alias:@shared=./shared --minify=false",
    "build:cdn": "vite build --config vite.config.cdn.ts && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist",
    "build:analyze:bundle": "tsx scripts/bundle-analyzer.ts",
    "build:analyze:legacy": "vite build --mode analyze && npx vite-bundle-analyzer dist/public",
    "start": "NODE_ENV=production node dist/index.js",
    "clean": "node scripts/clean.js",
    "clean:cache": "rm -rf node_modules/.vite .vite",
    "clean:build": "rm -rf dist",
    "clean:logs": "rm -f *.log",
    "clean:all": "npm run clean",
    "check": "tsc",
    "db:push": "drizzle-kit push --config scripts/drizzle.config.ts",
    "db:studio": "drizzle-kit studio",
    "db:status": "tsx server/scripts/check_db_status.ts",
    "db:analyze": "tsx server/scripts/analyze-db-queries.ts",
    "db:monitor": "tsx server/scripts/monitor-pool.ts",
    "db:monitor:test": "tsx server/scripts/monitor-pool.ts --test-load",
    "db:indexes": "tsx server/scripts/applyPerformanceIndexes.ts",
    "db:indexes-enhanced": "tsx server/scripts/enhancedPerformanceIndexes.ts",
    "db:category-hierarchy": "tsx server/migrations/addCategoryHierarchy.ts",
    "import:optimized": "tsx server/scripts/optimizedImport.ts",
    "import:aiml": "tsx import_aiml_incremental.ts",
    "import:aiml:resume": "tsx import_aiml_incremental.ts resume",
    "cleanup:terms": "tsx scripts/cleanup-incomplete-terms.ts",
    "import:aiml:status": "tsx import_aiml_incremental.ts status",
    "db:search-indexes": "tsx server/scripts/applySearchIndexes.ts",
    "create:test-users": "tsx server/scripts/createTestUser.ts",
    "cleanup:categories": "tsx server/scripts/cleanupInvalidCategories.ts",
    "audit:visual": "tsx scripts/comprehensive-audit-suite.ts visual",
    "audit:visual:full": "tsx scripts/visual-audit.ts",
    "audit:visual:debug": "tsx scripts/visual-audit-fixed.ts",
    "audit:visual:enhanced": "tsx scripts/visual-audit-enhanced.ts",
    "audit:visual:comprehensive": "tsx scripts/comprehensive-visual-audit.ts",
    "visual-test": "tsx scripts/visual-audit-cli.ts",
    "visual-test:accessibility": "tsx scripts/visual-audit-cli.ts test --type=accessibility",
    "visual-test:performance": "tsx scripts/visual-audit-cli.ts test --type=performance",
    "visual-test:interaction": "tsx scripts/visual-audit-cli.ts test --type=interaction",
    "visual-test:component": "tsx scripts/visual-audit-cli.ts component",
    "visual-test:flow": "tsx scripts/visual-audit-cli.ts flow",
    "visual-test:compare": "tsx scripts/visual-audit-cli.ts compare",
    "visual-test:analyze": "tsx scripts/visual-audit-cli.ts analyze",
    "cdn:deploy": "tsx scripts/deploy-cdn.ts",
    "seed:terms": "tsx scripts/content-seeding/seedTerms.ts",
    "seed:terms:dry-run": "tsx scripts/content-seeding/seedTerms.ts --dry-run",
    "seed:terms:category": "tsx scripts/content-seeding/seedTerms.ts --category",
    "generate:sections": "tsx scripts/content-seeding/generate42Sections.ts",
    "generate:sections:dry-run": "tsx scripts/content-seeding/generate42Sections.ts --dry-run",
    "generate:sections:priority": "tsx scripts/content-seeding/generate42Sections.ts --priority",
    "validate:content": "tsx scripts/content-seeding/validateContent.ts",
    "validate:content:fix": "tsx scripts/content-seeding/validateContent.ts --fix",
    "test:content-management": "tsx scripts/test-content-management.ts",
    "optimize:content-management": "tsx scripts/optimize-content-management.ts",
    "import:terms": "tsx scripts/content-seeding/bulkImport.ts",
    "health:content": "tsx scripts/test-content-management.ts",
    "monitor:imports": "echo 'Import monitoring via admin dashboard at /admin/content-import'",
    "status:content": "tsx scripts/content-status-check.ts",
    "setup:content": "tsx scripts/content-setup-complete.ts",
    "validate:content:report": "tsx scripts/content-seeding/validateContent.ts --report",
    "import:bulk": "tsx scripts/content-seeding/bulkImport.ts",
    "import:bulk:enhance": "tsx scripts/content-seeding/bulkImport.ts --enhance",
    "import:bulk:csv": "tsx scripts/content-seeding/bulkImport.ts --type csv --source",
    "import:bulk:json": "tsx scripts/content-seeding/bulkImport.ts --type json --source",
    "import:bulk:samples": "tsx scripts/content-seeding/bulkImport.ts --create-samples",
    "content:demo": "tsx scripts/content-seeding/demo.ts",
    "cdn:deploy:cloudflare": "tsx scripts/deploy-cdn.ts --cloudflare --env production",
    "cdn:deploy:cloudfront": "tsx scripts/deploy-cdn.ts --cloudfront --env production",
    "cdn:deploy:staging": "tsx scripts/deploy-cdn.ts --env staging",
    "cdn:deploy:dry-run": "tsx scripts/deploy-cdn.ts --dry-run --verbose",
    "cdn:test": "tsx scripts/test-cdn.ts",
    "cdn:test:cloudflare": "tsx scripts/test-cdn.ts --cloudflare --verbose",
    "cdn:test:cloudfront": "tsx scripts/test-cdn.ts --cloudfront --verbose",
    "cdn:test:local": "tsx scripts/test-cdn.ts --local --verbose",
    "cdn:test:performance": "tsx scripts/test-cdn.ts --iterations 10 --verbose",
    "test": "vitest --config vitest.unit.config.ts && vitest --config vitest.server.config.ts",
    "test:storybook": "vitest --config vitest.config.ts",
    "test:ui": "vitest --ui",
    "test:coverage": "vitest --config vitest.coverage.config.ts",
    "test:coverage:analyze": "tsx scripts/test-coverage-analyzer.ts",
    "test:coverage:report": "vitest --config vitest.coverage.config.ts --reporter=verbose",
    "test:quality": "tsx scripts/test-quality-checker.ts",
    "test:quality:run": "tsx scripts/test-quality-checker.ts --run-tests",
    "test:coverage:watch": "vitest --config vitest.coverage.config.ts --watch",
    "test:coverage:threshold": "vitest --config vitest.coverage.config.ts --coverage.thresholds",
    "coverage:report": "./scripts/generate-coverage-report.sh",
    "coverage:analyze": "node coverage-analysis.js",
    "test:visual": "playwright test --config=playwright.visual.config.ts",
    "test:visual:ui": "playwright test --config=playwright.visual.config.ts --ui",
    "test:visual:headed": "playwright test --config=playwright.visual.config.ts --headed",
    "test:visual:update": "playwright test --config=playwright.visual.config.ts --update-snapshots",
    "test:visual:chromium": "playwright test --config=playwright.visual.config.ts --project=chromium-desktop",
    "test:visual:mobile": "playwright test --config=playwright.visual.config.ts --project=mobile-chrome --project=mobile-safari",
    "test:visual:cross-browser": "playwright test --config=playwright.visual.config.ts --project=chromium-desktop --project=firefox-desktop --project=webkit-desktop",
    "test:visual:storybook": "playwright test",
    "audit:all": "tsx scripts/comprehensive-audit-suite.ts all",
    "audit:accessibility": "tsx scripts/comprehensive-audit-suite.ts accessibility",
    "audit:performance": "tsx scripts/comprehensive-audit-suite.ts performance",
    "audit:functional": "tsx scripts/comprehensive-audit-suite.ts functional",
    "audit:code-quality": "tsx scripts/comprehensive-audit-suite.ts code-quality",
    "validate:storybook-coverage": "tsx scripts/validate-storybook-coverage.ts",
    "validate:storybook-coverage:fix": "tsx scripts/validate-storybook-coverage.ts --fix",
    "audit:enhanced-functional": "tsx scripts/enhanced-functional-audit.ts",
    "audit:enhanced-functional:full": "tsx scripts/enhanced-functional-audit.ts --capture-all --record-video --interact-all --accessibility",
    "audit:ai-driven": "tsx scripts/run-ai-driven-audit.ts",
    "audit:ai-driven:full": "tsx scripts/run-ai-driven-audit.ts --full-capture --ai-analysis",
    "test:component": "vitest run tests/component",
    "test:unit": "vitest run tests/unit",
    "test:all": "npm run test:unit && npm run test:component && npm run test:visual",
    "test:users": "tsx scripts/test-user-accounts.ts",
    "storybook": "storybook dev -p 6006",
    "build-storybook": "storybook build",
    "chromatic": "chromatic",
    "chromatic:ci": "chromatic --exit-zero-on-changes",
    "lint": "NODE_OPTIONS=--max-old-space-size=8192 eslint . --ext .js,.jsx,.ts,.tsx",
    "lint:fix": "eslint . --ext .js,.jsx,.ts,.tsx --fix",
    "lint:a11y": "eslint . --ext .js,.jsx,.ts,.tsx --config eslint.config.js",
    "lint:biome": "biome lint .",
    "lint:biome:fix": "biome lint . --write",
    "format:biome": "biome format . --write",
    "check:biome": "biome check . --write",
    "dev:format": "node scripts/dev-format.js",
    "dev:errors": "node scripts/dev-error-reporter.js",
    "dev:tools": "npm run dev:format && npm run dev:errors",
    "stories:generate": "tsx scripts/generate-missing-stories.ts",
    "stories:analyze": "tsx scripts/generate-missing-stories.ts --analyze-only"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.808.0",
    "@aws-sdk/client-ses": "^3.844.0",
    "@aws-sdk/lib-storage": "^3.832.0",
    "@aws-sdk/s3-request-presigner": "^3.832.0",
    "@google/generative-ai": "^0.24.1",
    "@hookform/resolvers": "^3.10.0",
    "@jridgewell/trace-mapping": "^0.3.25",
    "@neondatabase/serverless": "^0.10.4",
    "@radix-ui/react-accordion": "^1.2.4",
    "@radix-ui/react-alert-dialog": "^1.1.7",
    "@radix-ui/react-aspect-ratio": "^1.1.3",
    "@radix-ui/react-avatar": "^1.1.4",
    "@radix-ui/react-checkbox": "^1.1.5",
    "@radix-ui/react-collapsible": "^1.1.4",
    "@radix-ui/react-context-menu": "^2.2.7",
    "@radix-ui/react-dialog": "^1.1.7",
    "@radix-ui/react-dropdown-menu": "^2.1.7",
    "@radix-ui/react-hover-card": "^1.1.7",
    "@radix-ui/react-label": "^2.1.3",
    "@radix-ui/react-menubar": "^1.1.7",
    "@radix-ui/react-navigation-menu": "^1.2.6",
    "@radix-ui/react-popover": "^1.1.7",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-radio-group": "^1.2.4",
    "@radix-ui/react-scroll-area": "^1.2.4",
    "@radix-ui/react-select": "^2.1.7",
    "@radix-ui/react-separator": "^1.1.3",
    "@radix-ui/react-slider": "^1.2.4",
    "@radix-ui/react-slot": "^1.2.0",
    "@radix-ui/react-switch": "^1.1.4",
    "@radix-ui/react-tabs": "^1.1.4",
    "@radix-ui/react-toast": "^1.2.7",
    "@radix-ui/react-toggle": "^1.1.3",
    "@radix-ui/react-toggle-group": "^1.1.3",
    "@radix-ui/react-tooltip": "^1.2.0",
    "@react-three/drei": "^9.122.0",
    "@react-three/fiber": "^8.18.0",
    "@react-three/xr": "^6.2.3",
    "@sentry/node": "^9.38.0",
    "@sentry/profiling-node": "^9.38.0",
    "@sentry/react": "^9.31.0",
    "@tanstack/react-query": "^5.60.5",
    "@types/cookie-parser": "^1.4.9",
    "@types/cors": "^2.8.19",
    "@types/dompurify": "^3.0.5",
    "@types/express-ws": "^3.0.5",
    "@types/ioredis": "^4.28.10",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/katex": "^0.16.7",
    "@types/multer": "^1.4.12",
    "@types/node-cron": "^3.0.11",
    "@types/nodemailer": "^6.4.17",
    "@types/passport-github2": "^1.2.9",
    "@types/passport-google-oauth20": "^2.0.16",
    "@types/prismjs": "^1.26.5",
    "@types/react-syntax-highlighter": "^15.5.13",
    "@types/react-window": "^1.8.8",
    "@types/sqlstring": "^2.3.2",
    "@types/swagger-jsdoc": "^6.0.4",
    "@types/swagger-ui-express": "^4.1.8",
    "@types/uuid": "^10.0.0",
    "@upstash/redis": "^1.35.1",
    "archiver": "^7.0.1",
    "axios": "^1.10.0",
    "bullmq": "^5.56.1",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.1.1",
    "cookie-parser": "^1.4.7",
    "cors": "^2.8.5",
    "csv-parse": "^5.6.0",
    "csv-parser": "^3.2.0",
    "csv-writer": "^1.6.0",
    "date-fns": "^3.6.0",
    "dompurify": "^3.2.6",
    "dotenv": "^16.5.0",
    "drizzle-orm": "^0.44.2",
    "drizzle-zod": "^0.7.0",
    "embla-carousel-react": "^8.6.0",
    "express": "^4.21.2",
    "express-rate-limit": "^7.5.1",
    "express-session": "^1.18.1",
    "express-ws": "^5.0.2",
    "firebase": "^11.10.0",
    "firebase-admin": "^13.4.0",
    "focus-trap-react": "^11.0.4",
    "form-data": "^4.0.3",
    "framer-motion": "^11.13.1",
    "googleapis": "^148.0.0",
    "helmet": "^8.1.0",
    "input-otp": "^1.4.2",
    "ioredis": "^5.6.1",
    "isomorphic-dompurify": "^2.26.0",
    "jsonwebtoken": "^9.0.2",
    "katex": "^0.16.22",
    "lucide-react": "^0.453.0",
    "memorystore": "^1.6.7",
    "mermaid": "^11.7.0",
    "million": "^3.1.11",
    "multer": "^1.4.5-lts.2",
    "next-themes": "^0.4.6",
    "node-cache": "^5.1.2",
    "node-cron": "^4.2.0",
    "nodemailer": "^7.0.4",
    "openai": "^5.5.1",
    "passport": "^0.7.0",
    "passport-github2": "^0.1.12",
    "passport-google-oauth20": "^2.0.0",
    "passport-local": "^1.0.0",
    "posthog-js": "^1.255.1",
    "posthog-node": "^5.1.1",
    "prismjs": "^1.30.0",
    "react": "^18.3.1",
    "react-day-picker": "^8.10.1",
    "react-dom": "^18.3.1",
    "react-dropzone": "^14.3.8",
    "react-helmet-async": "^2.0.5",
    "react-hook-form": "^7.55.0",
    "react-icons": "^5.4.0",
    "react-markdown": "^10.1.0",
    "react-resizable-panels": "^2.1.7",
    "react-router-dom": "^7.6.3",
    "react-syntax-highlighter": "^15.6.1",
    "react-window": "^1.8.11",
    "react-window-infinite-loader": "^1.0.10",
    "recharts": "^2.15.2",
    "remark-gfm": "^4.0.1",
    "resend": "^4.6.0",
    "sonner": "^2.0.6",
    "sqlstring": "^2.3.3",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.1",
    "tailwind-merge": "^2.6.0",
    "tailwindcss-animate": "^1.0.7",
    "three": "^0.160.1",
    "tw-animate-css": "^1.2.5",
    "uuid": "^11.1.0",
    "vaul": "^1.1.2",
    "webxr-polyfill": "^2.0.3",
    "winston": "^3.17.0",
    "winston-daily-rotate-file": "^5.0.0",
    "wouter": "^3.3.5",
    "ws": "^8.18.0",
    "zod": "^3.24.2",
    "zod-validation-error": "^3.4.0"
  },
  "devDependencies": {
    "@axe-core/playwright": "^4.10.2",
    "@biomejs/biome": "^2.1.1",
    "@chromatic-com/storybook": "^4.0.1",
    "@playwright/test": "^1.54.1",
    "@storybook/addon-a11y": "^9.0.12",
    "@storybook/addon-docs": "^9.0.12",
    "@storybook/addon-onboarding": "^9.0.12",
    "@storybook/addon-themes": "^9.0.12",
    "@storybook/addon-vitest": "^9.0.12",
    "@storybook/react-vite": "^9.0.12",
    "@tailwindcss/forms": "^0.5.10",
    "@tailwindcss/typography": "^0.5.16",
    "@tailwindcss/vite": "^4.1.3",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@types/archiver": "^6.0.3",
    "@types/compression": "^1.7.5",
    "@types/express": "4.17.21",
    "@types/express-session": "^1.18.0",
    "@types/fs-extra": "^11.0.4",
    "@types/node": "^20.16.11",
    "@types/node-cache": "^4.1.3",
    "@types/node-fetch": "^2.6.12",
    "@types/passport": "^1.0.17",
    "@types/passport-local": "^1.0.38",
    "@types/puppeteer": "^5.4.7",
    "@types/react": "^18.3.11",
    "@types/react-dom": "^18.3.1",
    "@types/react-window-infinite-loader": "^1.0.9",
    "@types/supertest": "^6.0.3",
    "@types/three": "^0.160.0",
    "@types/ws": "^8.5.13",
    "@typescript-eslint/eslint-plugin": "^8.35.1",
    "@typescript-eslint/parser": "^8.35.1",
    "@vitejs/plugin-react": "^4.3.2",
    "@vitest/browser": "3.2.4",
    "@vitest/coverage-v8": "3.2.4",
    "@vitest/ui": "^3.2.4",
    "autoprefixer": "^10.4.21",
    "axe-playwright": "^2.1.0",
    "chalk": "^5.4.1",
    "chromatic": "^13.0.1",
    "chrome-launcher": "^1.2.0",
    "cli-table3": "^0.6.5",
    "commander": "^12.1.0",
    "compression": "^1.7.5",
    "concurrently": "^9.2.0",
    "cypress": "^14.5.0",
    "drizzle-kit": "^0.30.4",
    "esbuild": "^0.25.0",
    "eslint": "^9.30.0",
    "eslint-plugin-cypress": "^5.1.0",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-storybook": "^9.0.16",
    "glob": "^11.0.3",
    "globals": "^16.3.0",
    "jest-environment-jsdom-latest": "^26.6.2",
    "jest-fixed-jsdom": "^0.0.9",
    "jsdom": "^26.1.0",
    "lighthouse": "^12.7.0",
    "lighthouse-cli": "^0.1.2",
    "node-fetch": "^3.3.2",
    "nodemon": "^3.1.10",
    "ora": "^8.2.0",
    "playwright": "^1.54.1",
    "playwright-lighthouse": "^4.0.0",
    "postcss": "^8.5.6",
    "react-scan": "^0.4.3",
    "rollup-plugin-visualizer": "^5.12.0",
    "sharp": "^0.33.5",
    "storybook": "^9.0.12",
    "supertest": "^7.1.1",
    "tailwindcss": "^3.4.17",
    "tsx": "^4.20.3",
    "typescript": "5.6.3",
    "vite": "^5.4.14",
    "vite-bundle-analyzer": "^1.1.0",
    "vite-plugin-compression": "^0.5.1",
    "vite-plugin-pwa": "^0.20.5",
    "vitest": "^3.2.4",
    "web-vitals": "^3.5.2"
  },
  "optionalDependencies": {
    "bufferutil": "^4.0.8"
  },
  "eslintConfig": {
    "extends": [
      "plugin:storybook/recommended"
    ]
  }
}
