import type { z } from 'zod';
export declare const abTests: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "ab_tests";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "ab_tests";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        name: import("drizzle-orm/pg-core").PgColumn<{
            name: "name";
            tableName: "ab_tests";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 200;
        }>;
        description: import("drizzle-orm/pg-core").PgColumn<{
            name: "description";
            tableName: "ab_tests";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        testType: import("drizzle-orm/pg-core").PgColumn<{
            name: "test_type";
            tableName: "ab_tests";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        variants: import("drizzle-orm/pg-core").PgColumn<{
            name: "variants";
            tableName: "ab_tests";
            dataType: "json";
            columnType: "PgJsonb";
            data: string[];
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            $type: string[];
        }>;
        trafficSplit: import("drizzle-orm/pg-core").PgColumn<{
            name: "traffic_split";
            tableName: "ab_tests";
            dataType: "json";
            columnType: "PgJsonb";
            data: Record<string, number>;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            $type: Record<string, number>;
        }>;
        successMetric: import("drizzle-orm/pg-core").PgColumn<{
            name: "success_metric";
            tableName: "ab_tests";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        minimumSampleSize: import("drizzle-orm/pg-core").PgColumn<{
            name: "minimum_sample_size";
            tableName: "ab_tests";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        confidenceThreshold: import("drizzle-orm/pg-core").PgColumn<{
            name: "confidence_threshold";
            tableName: "ab_tests";
            dataType: "number";
            columnType: "PgReal";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        status: import("drizzle-orm/pg-core").PgColumn<{
            name: "status";
            tableName: "ab_tests";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 20;
        }>;
        startDate: import("drizzle-orm/pg-core").PgColumn<{
            name: "start_date";
            tableName: "ab_tests";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        endDate: import("drizzle-orm/pg-core").PgColumn<{
            name: "end_date";
            tableName: "ab_tests";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        winner: import("drizzle-orm/pg-core").PgColumn<{
            name: "winner";
            tableName: "ab_tests";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        winnerConfidence: import("drizzle-orm/pg-core").PgColumn<{
            name: "winner_confidence";
            tableName: "ab_tests";
            dataType: "number";
            columnType: "PgReal";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        finalResults: import("drizzle-orm/pg-core").PgColumn<{
            name: "final_results";
            tableName: "ab_tests";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdBy: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_by";
            tableName: "ab_tests";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: number | undefined;
        }>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "ab_tests";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "ab_tests";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const abTestMetrics: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "ab_test_metrics";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "ab_test_metrics";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        testId: import("drizzle-orm/pg-core").PgColumn<{
            name: "test_id";
            tableName: "ab_test_metrics";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        variant: import("drizzle-orm/pg-core").PgColumn<{
            name: "variant";
            tableName: "ab_test_metrics";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        pageViews: import("drizzle-orm/pg-core").PgColumn<{
            name: "page_views";
            tableName: "ab_test_metrics";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        uniqueVisitors: import("drizzle-orm/pg-core").PgColumn<{
            name: "unique_visitors";
            tableName: "ab_test_metrics";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        totalSessions: import("drizzle-orm/pg-core").PgColumn<{
            name: "total_sessions";
            tableName: "ab_test_metrics";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        seeWhatsInsideClicks: import("drizzle-orm/pg-core").PgColumn<{
            name: "see_whats_inside_clicks";
            tableName: "ab_test_metrics";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        ctaClicks: import("drizzle-orm/pg-core").PgColumn<{
            name: "cta_clicks";
            tableName: "ab_test_metrics";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        trialSignups: import("drizzle-orm/pg-core").PgColumn<{
            name: "trial_signups";
            tableName: "ab_test_metrics";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        newsletterSignups: import("drizzle-orm/pg-core").PgColumn<{
            name: "newsletter_signups";
            tableName: "ab_test_metrics";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        pricingPageViews: import("drizzle-orm/pg-core").PgColumn<{
            name: "pricing_page_views";
            tableName: "ab_test_metrics";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        bounceRate: import("drizzle-orm/pg-core").PgColumn<{
            name: "bounce_rate";
            tableName: "ab_test_metrics";
            dataType: "number";
            columnType: "PgReal";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        avgSessionDuration: import("drizzle-orm/pg-core").PgColumn<{
            name: "avg_session_duration";
            tableName: "ab_test_metrics";
            dataType: "number";
            columnType: "PgReal";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        avgScrollDepth: import("drizzle-orm/pg-core").PgColumn<{
            name: "avg_scroll_depth";
            tableName: "ab_test_metrics";
            dataType: "number";
            columnType: "PgReal";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        deviceBreakdown: import("drizzle-orm/pg-core").PgColumn<{
            name: "device_breakdown";
            tableName: "ab_test_metrics";
            dataType: "json";
            columnType: "PgJsonb";
            data: Record<string, number>;
            driverParam: unknown;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            $type: Record<string, number>;
        }>;
        browserBreakdown: import("drizzle-orm/pg-core").PgColumn<{
            name: "browser_breakdown";
            tableName: "ab_test_metrics";
            dataType: "json";
            columnType: "PgJsonb";
            data: Record<string, number>;
            driverParam: unknown;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            $type: Record<string, number>;
        }>;
        utmSourceBreakdown: import("drizzle-orm/pg-core").PgColumn<{
            name: "utm_source_breakdown";
            tableName: "ab_test_metrics";
            dataType: "json";
            columnType: "PgJsonb";
            data: Record<string, number>;
            driverParam: unknown;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            $type: Record<string, number>;
        }>;
        utmMediumBreakdown: import("drizzle-orm/pg-core").PgColumn<{
            name: "utm_medium_breakdown";
            tableName: "ab_test_metrics";
            dataType: "json";
            columnType: "PgJsonb";
            data: Record<string, number>;
            driverParam: unknown;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            $type: Record<string, number>;
        }>;
        hourlyDistribution: import("drizzle-orm/pg-core").PgColumn<{
            name: "hourly_distribution";
            tableName: "ab_test_metrics";
            dataType: "json";
            columnType: "PgJsonb";
            data: Record<number, number>;
            driverParam: unknown;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            $type: Record<number, number>;
        }>;
        dayOfWeekDistribution: import("drizzle-orm/pg-core").PgColumn<{
            name: "day_of_week_distribution";
            tableName: "ab_test_metrics";
            dataType: "json";
            columnType: "PgJsonb";
            data: Record<string, number>;
            driverParam: unknown;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            $type: Record<string, number>;
        }>;
        conversionRate: import("drizzle-orm/pg-core").PgColumn<{
            name: "conversion_rate";
            tableName: "ab_test_metrics";
            dataType: "number";
            columnType: "PgReal";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        confidenceInterval: import("drizzle-orm/pg-core").PgColumn<{
            name: "confidence_interval";
            tableName: "ab_test_metrics";
            dataType: "json";
            columnType: "PgJsonb";
            data: {
                lower: number;
                upper: number;
            };
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            $type: {
                lower: number;
                upper: number;
            };
        }>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "ab_test_metrics";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "ab_test_metrics";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const abTestEvents: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "ab_test_events";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "ab_test_events";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        testId: import("drizzle-orm/pg-core").PgColumn<{
            name: "test_id";
            tableName: "ab_test_events";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        variant: import("drizzle-orm/pg-core").PgColumn<{
            name: "variant";
            tableName: "ab_test_events";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        eventType: import("drizzle-orm/pg-core").PgColumn<{
            name: "event_type";
            tableName: "ab_test_events";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        eventName: import("drizzle-orm/pg-core").PgColumn<{
            name: "event_name";
            tableName: "ab_test_events";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 200;
        }>;
        properties: import("drizzle-orm/pg-core").PgColumn<{
            name: "properties";
            tableName: "ab_test_events";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        sessionId: import("drizzle-orm/pg-core").PgColumn<{
            name: "session_id";
            tableName: "ab_test_events";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        userId: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_id";
            tableName: "ab_test_events";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        deviceType: import("drizzle-orm/pg-core").PgColumn<{
            name: "device_type";
            tableName: "ab_test_events";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 20;
        }>;
        browser: import("drizzle-orm/pg-core").PgColumn<{
            name: "browser";
            tableName: "ab_test_events";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        ipAddress: import("drizzle-orm/pg-core").PgColumn<{
            name: "ip_address";
            tableName: "ab_test_events";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 45;
        }>;
        userAgent: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_agent";
            tableName: "ab_test_events";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        referrer: import("drizzle-orm/pg-core").PgColumn<{
            name: "referrer";
            tableName: "ab_test_events";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        utmSource: import("drizzle-orm/pg-core").PgColumn<{
            name: "utm_source";
            tableName: "ab_test_events";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        utmMedium: import("drizzle-orm/pg-core").PgColumn<{
            name: "utm_medium";
            tableName: "ab_test_events";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        utmCampaign: import("drizzle-orm/pg-core").PgColumn<{
            name: "utm_campaign";
            tableName: "ab_test_events";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        timestamp: import("drizzle-orm/pg-core").PgColumn<{
            name: "timestamp";
            tableName: "ab_test_events";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const abTestReports: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "ab_test_reports";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "ab_test_reports";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        testId: import("drizzle-orm/pg-core").PgColumn<{
            name: "test_id";
            tableName: "ab_test_reports";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        reportType: import("drizzle-orm/pg-core").PgColumn<{
            name: "report_type";
            tableName: "ab_test_reports";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 50;
        }>;
        reportDate: import("drizzle-orm/pg-core").PgColumn<{
            name: "report_date";
            tableName: "ab_test_reports";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        metricsSnapshot: import("drizzle-orm/pg-core").PgColumn<{
            name: "metrics_snapshot";
            tableName: "ab_test_reports";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        statisticalAnalysis: import("drizzle-orm/pg-core").PgColumn<{
            name: "statistical_analysis";
            tableName: "ab_test_reports";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        recommendations: import("drizzle-orm/pg-core").PgColumn<{
            name: "recommendations";
            tableName: "ab_test_reports";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isAutomated: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_automated";
            tableName: "ab_test_reports";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        sentTo: import("drizzle-orm/pg-core").PgColumn<{
            name: "sent_to";
            tableName: "ab_test_reports";
            dataType: "json";
            columnType: "PgJsonb";
            data: string[];
            driverParam: unknown;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            $type: string[];
        }>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "ab_test_reports";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const abTestSegments: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "ab_test_segments";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "ab_test_segments";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        testId: import("drizzle-orm/pg-core").PgColumn<{
            name: "test_id";
            tableName: "ab_test_segments";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        name: import("drizzle-orm/pg-core").PgColumn<{
            name: "name";
            tableName: "ab_test_segments";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 100;
        }>;
        description: import("drizzle-orm/pg-core").PgColumn<{
            name: "description";
            tableName: "ab_test_segments";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        rules: import("drizzle-orm/pg-core").PgColumn<{
            name: "rules";
            tableName: "ab_test_segments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        variantMetrics: import("drizzle-orm/pg-core").PgColumn<{
            name: "variant_metrics";
            tableName: "ab_test_segments";
            dataType: "json";
            columnType: "PgJsonb";
            data: unknown;
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "ab_test_segments";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "ab_test_segments";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const insertABTestSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    testType: z.ZodOptional<z.ZodString>;
    variants: z.ZodType<string[], z.ZodTypeDef, string[]>;
    trafficSplit: z.ZodOptional<z.ZodNullable<z.ZodType<Record<string, number>, z.ZodTypeDef, Record<string, number>>>>;
    successMetric: z.ZodString;
    minimumSampleSize: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    confidenceThreshold: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    status: z.ZodOptional<z.ZodString>;
    startDate: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    endDate: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    winner: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    winnerConfidence: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    finalResults: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod").Json, z.ZodTypeDef, import("drizzle-zod").Json>>>;
    createdBy: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    name: string;
    variants: string[];
    successMetric: string;
    status?: string | undefined;
    description?: string | null | undefined;
    testType?: string | undefined;
    trafficSplit?: Record<string, number> | null | undefined;
    minimumSampleSize?: number | null | undefined;
    confidenceThreshold?: number | null | undefined;
    startDate?: Date | null | undefined;
    endDate?: Date | null | undefined;
    winner?: string | null | undefined;
    winnerConfidence?: number | null | undefined;
    finalResults?: import("drizzle-zod").Json | undefined;
    createdBy?: string | null | undefined;
}, {
    name: string;
    variants: string[];
    successMetric: string;
    status?: string | undefined;
    description?: string | null | undefined;
    testType?: string | undefined;
    trafficSplit?: Record<string, number> | null | undefined;
    minimumSampleSize?: number | null | undefined;
    confidenceThreshold?: number | null | undefined;
    startDate?: Date | null | undefined;
    endDate?: Date | null | undefined;
    winner?: string | null | undefined;
    winnerConfidence?: number | null | undefined;
    finalResults?: import("drizzle-zod").Json | undefined;
    createdBy?: string | null | undefined;
}>;
export declare const insertABTestMetricsSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    testId: z.ZodString;
    variant: z.ZodString;
    pageViews: z.ZodOptional<z.ZodNumber>;
    uniqueVisitors: z.ZodOptional<z.ZodNumber>;
    totalSessions: z.ZodOptional<z.ZodNumber>;
    seeWhatsInsideClicks: z.ZodOptional<z.ZodNumber>;
    ctaClicks: z.ZodOptional<z.ZodNumber>;
    trialSignups: z.ZodOptional<z.ZodNumber>;
    newsletterSignups: z.ZodOptional<z.ZodNumber>;
    pricingPageViews: z.ZodOptional<z.ZodNumber>;
    bounceRate: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    avgSessionDuration: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    avgScrollDepth: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    deviceBreakdown: z.ZodOptional<z.ZodNullable<z.ZodType<Record<string, number>, z.ZodTypeDef, Record<string, number>>>>;
    browserBreakdown: z.ZodOptional<z.ZodNullable<z.ZodType<Record<string, number>, z.ZodTypeDef, Record<string, number>>>>;
    utmSourceBreakdown: z.ZodOptional<z.ZodNullable<z.ZodType<Record<string, number>, z.ZodTypeDef, Record<string, number>>>>;
    utmMediumBreakdown: z.ZodOptional<z.ZodNullable<z.ZodType<Record<string, number>, z.ZodTypeDef, Record<string, number>>>>;
    hourlyDistribution: z.ZodOptional<z.ZodNullable<z.ZodType<Record<number, number>, z.ZodTypeDef, Record<number, number>>>>;
    dayOfWeekDistribution: z.ZodOptional<z.ZodNullable<z.ZodType<Record<string, number>, z.ZodTypeDef, Record<string, number>>>>;
    conversionRate: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    confidenceInterval: z.ZodOptional<z.ZodNullable<z.ZodType<{
        lower: number;
        upper: number;
    }, z.ZodTypeDef, {
        lower: number;
        upper: number;
    }>>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    testId: string;
    variant: string;
    pageViews?: number | undefined;
    uniqueVisitors?: number | undefined;
    totalSessions?: number | undefined;
    seeWhatsInsideClicks?: number | undefined;
    ctaClicks?: number | undefined;
    trialSignups?: number | undefined;
    newsletterSignups?: number | undefined;
    pricingPageViews?: number | undefined;
    bounceRate?: number | null | undefined;
    avgSessionDuration?: number | null | undefined;
    avgScrollDepth?: number | null | undefined;
    deviceBreakdown?: Record<string, number> | null | undefined;
    browserBreakdown?: Record<string, number> | null | undefined;
    utmSourceBreakdown?: Record<string, number> | null | undefined;
    utmMediumBreakdown?: Record<string, number> | null | undefined;
    hourlyDistribution?: Record<number, number> | null | undefined;
    dayOfWeekDistribution?: Record<string, number> | null | undefined;
    conversionRate?: number | null | undefined;
    confidenceInterval?: {
        lower: number;
        upper: number;
    } | null | undefined;
}, {
    testId: string;
    variant: string;
    pageViews?: number | undefined;
    uniqueVisitors?: number | undefined;
    totalSessions?: number | undefined;
    seeWhatsInsideClicks?: number | undefined;
    ctaClicks?: number | undefined;
    trialSignups?: number | undefined;
    newsletterSignups?: number | undefined;
    pricingPageViews?: number | undefined;
    bounceRate?: number | null | undefined;
    avgSessionDuration?: number | null | undefined;
    avgScrollDepth?: number | null | undefined;
    deviceBreakdown?: Record<string, number> | null | undefined;
    browserBreakdown?: Record<string, number> | null | undefined;
    utmSourceBreakdown?: Record<string, number> | null | undefined;
    utmMediumBreakdown?: Record<string, number> | null | undefined;
    hourlyDistribution?: Record<number, number> | null | undefined;
    dayOfWeekDistribution?: Record<string, number> | null | undefined;
    conversionRate?: number | null | undefined;
    confidenceInterval?: {
        lower: number;
        upper: number;
    } | null | undefined;
}>;
export declare const insertABTestEventSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    testId: z.ZodString;
    variant: z.ZodString;
    eventType: z.ZodString;
    eventName: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    properties: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod").Json, z.ZodTypeDef, import("drizzle-zod").Json>>>;
    sessionId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    userId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    deviceType: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    browser: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    ipAddress: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    userAgent: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    referrer: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    utmSource: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    utmMedium: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    utmCampaign: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    timestamp: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
}, "id" | "timestamp">, "strip", z.ZodTypeAny, {
    testId: string;
    variant: string;
    eventType: string;
    userId?: string | null | undefined;
    userAgent?: string | null | undefined;
    ipAddress?: string | null | undefined;
    utmSource?: string | null | undefined;
    utmMedium?: string | null | undefined;
    utmCampaign?: string | null | undefined;
    sessionId?: string | null | undefined;
    eventName?: string | null | undefined;
    properties?: import("drizzle-zod").Json | undefined;
    deviceType?: string | null | undefined;
    browser?: string | null | undefined;
    referrer?: string | null | undefined;
}, {
    testId: string;
    variant: string;
    eventType: string;
    userId?: string | null | undefined;
    userAgent?: string | null | undefined;
    ipAddress?: string | null | undefined;
    utmSource?: string | null | undefined;
    utmMedium?: string | null | undefined;
    utmCampaign?: string | null | undefined;
    sessionId?: string | null | undefined;
    eventName?: string | null | undefined;
    properties?: import("drizzle-zod").Json | undefined;
    deviceType?: string | null | undefined;
    browser?: string | null | undefined;
    referrer?: string | null | undefined;
}>;
export declare const insertABTestReportSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    testId: z.ZodString;
    reportType: z.ZodString;
    reportDate: z.ZodDate;
    metricsSnapshot: z.ZodType<import("drizzle-zod").Json, z.ZodTypeDef, import("drizzle-zod").Json>;
    statisticalAnalysis: z.ZodOptional<z.ZodNullable<z.ZodType<import("drizzle-zod").Json, z.ZodTypeDef, import("drizzle-zod").Json>>>;
    recommendations: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    isAutomated: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    sentTo: z.ZodOptional<z.ZodNullable<z.ZodType<string[], z.ZodTypeDef, string[]>>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
}, "id" | "createdAt">, "strip", z.ZodTypeAny, {
    testId: string;
    reportType: string;
    reportDate: Date;
    metricsSnapshot: import("drizzle-zod").Json;
    statisticalAnalysis?: import("drizzle-zod").Json | undefined;
    recommendations?: string | null | undefined;
    isAutomated?: boolean | null | undefined;
    sentTo?: string[] | null | undefined;
}, {
    testId: string;
    reportType: string;
    reportDate: Date;
    metricsSnapshot: import("drizzle-zod").Json;
    statisticalAnalysis?: import("drizzle-zod").Json | undefined;
    recommendations?: string | null | undefined;
    isAutomated?: boolean | null | undefined;
    sentTo?: string[] | null | undefined;
}>;
export declare const insertABTestSegmentSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    testId: z.ZodString;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    rules: z.ZodType<import("drizzle-zod").Json, z.ZodTypeDef, import("drizzle-zod").Json>;
    variantMetrics: z.ZodType<import("drizzle-zod").Json, z.ZodTypeDef, import("drizzle-zod").Json>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodDate>>;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    name: string;
    testId: string;
    rules: import("drizzle-zod").Json;
    variantMetrics: import("drizzle-zod").Json;
    description?: string | null | undefined;
}, {
    name: string;
    testId: string;
    rules: import("drizzle-zod").Json;
    variantMetrics: import("drizzle-zod").Json;
    description?: string | null | undefined;
}>;
export type ABTest = typeof abTests.$inferSelect;
export type InsertABTest = z.infer<typeof insertABTestSchema>;
export type ABTestMetrics = typeof abTestMetrics.$inferSelect;
export type InsertABTestMetrics = z.infer<typeof insertABTestMetricsSchema>;
export type ABTestEvent = typeof abTestEvents.$inferSelect;
export type InsertABTestEvent = z.infer<typeof insertABTestEventSchema>;
export type ABTestReport = typeof abTestReports.$inferSelect;
export type InsertABTestReport = z.infer<typeof insertABTestReportSchema>;
export type ABTestSegment = typeof abTestSegments.$inferSelect;
export type InsertABTestSegment = z.infer<typeof insertABTestSegmentSchema>;
